// Пользователь вводит N и M – количество строк и столбцов в матрице. Программа
// должна заполнить матрицу случайными двузначными числами и корректно
// вывести полученную матрицу в консоль. После этого пользователь вводит номер
// строки или столбца, а программа выводит сумму числе в соответствующей строке
// или соответствующем столбце.

// https://github.com/A-l-E-v/CPP_Synergy/blob/main/U-365/nm_array.cpp

#include <iostream>

using namespace std;

int main()
{
    int n_max = 25;
    int m_max = 25;
    int n = n_max;
    int m = m_max;
    int col = 0;
    int raw = 0;
    int sum = 0;
    int number = 0;
    int index;
    int nm_array[n_max][m_max];

    // Название программы
    cout << "--- Сумма чисел строки или столбца матрицы ---\n\n";

    cout << "Введите количество строк N<=" << n << ": ";
    cin >> n;

    // проверка превышения кол-ва строк
    if (n <= 0)
    {
        cout << "Количество строк должно быть больше 0 и не больше " << n_max << "!\n";
        exit(1);
    }

    if (n > n_max)

    {
        cout << "Превышено количество строк (" << n_max << ")!\n";
        exit(1);
    }

    // проверка превышения кол-ва столбцов
    cout << "Введите количество столбцов M<=" << m << ": ";
    cin >> m;
    if (m <= 0)
    {
        cout << "Количество столбцов должно быть больше 0 и не больше " << m_max << "!\n";
        exit(1);
    }
    if (m > m_max)
    {
        cout << "Превышено количество столбцов (" << m_max << ")!\n";
        exit(1);
    }

    // заполняем массив
        srand(time(0));

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < m; j++)
        {
            nm_array[i][j] = rand() % 90 + 10;
        }
    }

    // новая строка и левый верхний отступ
    cout << "\n\t";

    // выводим номера столбцов
    for (int i = 1; i < m + 1; i++)
    {
        cout << i << '\t';
        col++;
    }

    // готовимся к выводу матрицы
    cout << "\n\n\n";

    // нумерация рядов начинается с кол-ва колонок
    raw = col + 1;

    // выводим ячейки матрицы
    for (int i = 0; i < n; i++)
    {
        cout << raw << '\t';
        raw++;

        for (int j = 0; j < m; j++)
        {
            cout << nm_array[i][j] << '\t';
        }
        cout << '\n';
    }

    cout << "\n\n";

    cout << "Введите номер столбца (1-" << m << ") или строки (" << m + 1 << "-" << n + m << "): ";
    cin >> index;

    // номер должен быть положительным
    if (index > 0)
    {
        // если меньше или равно кол-ву столбцов, то это столбец
        if (index < m + 1)
        {
            cout << "Вы ввели: столбец №" << index << '\n';
            cout << "В столбце №" << index << " содержатся следующие числа:\n";
            for (int i = 0; i < n; i++)
            {
                number = nm_array[i][index - 1];
                sum += number;
                cout << number << '\t';
            }
            cout << '\n';
            cout << "Сумма чисел: " << sum << '\n';
            exit(0);
        }
        // иначе, это строка
        else if (index < n + m + 1)
        {
            cout << "Вы ввели: строка №" << index << '\n';
            cout << "В строке №" << index << " содержатся следующие числа:\n";
            for (int i = 0; i < m; i++)
            {
                number = nm_array[index - m - 1][i];
                sum += number;
                cout << number << '\t';
            }
            cout << '\n';
            cout << "Сумма чисел: " << sum << '\n';
            exit(0);
        }
        // вышли за допустимые пределы
        else
        {
            cout << "Вы ввели слишком большой номер строки или столбца!\n";
        }
    }
    else
    {
        cout << "Номер строки или столбца должен быть > 0.\n";
        exit(1);
    }
}
